#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Set PATH so it includes user's private bin, if it exists

if [[ -d "$HOME/bin" ]]; then
  PATH="$PATH:$HOME/bin"
fi

# Set Visual Studio Code as default editor if it exists, otherwise vim

if [[ -f "/usr/local/bin/code" ]]; then
  export EDITOR='vim'
  export VISUAL='code --wait --new-window'
else
  export EDITOR='vim'
  export VISUAL='vim'
fi

# general aliases

alias gsl='git stash -u && git pull && git stash pop'
alias uuu='cd ~ && git diff --exit-code && git diff --staged --exit-code && git pull && cd ~/.zprezto && git diff --exit-code && git diff --staged --exit-code && git pull && popd && popd'

# npm aliases

alias audit='rm -rf node_modules/ && npm install --package-lock=true && npm audit; rm -f package-lock.json'
alias b='npm run build'
alias dep='git pull && git diff --exit-code && git diff --staged --exit-code && npm run deploy'
alias i='npm install'
alias ii='rm -rf node_modules/ && rm -f package-lock.json && npm install'
alias o='npm outdated'
alias oo='npm outdated --depth=50 --production'
alias pack='npm pack --dry-run'
alias run='npm run'
alias sb='npm run storybook'
alias st='npm start'
alias t='npm test'
alias u='npm update && npm outdated'
alias w='npm run watch'

# 'npm publish' aliases

alias patch='preversion && npm version patch && postversion'
alias minor='preversion && npm version minor && postversion'
alias major='preversion && npm version major && postversion'
alias preversion='git pull && git diff --exit-code && git diff --staged --exit-code && npm pack --dry-run --ignore-scripts && rm -rf node_modules/ && rm -f package-lock.json && npm install && npm test'
alias postversion='git diff --exit-code && git diff --staged --exit-code && npm run --if-present update-authors && (git diff --exit-code || git commit -am "update authors") && npm run --if-present build && (git diff --exit-code || git commit -am "build") && ~/code/standard-package/cmd.js --fix && (git diff --exit-code || git commit -am "package metadata") && git push --follow-tags && npm publish'

# 'npm global binary' aliases

alias dep-check='dependency-check . --no-dev --unused'
alias v='cat package.json | json version'

# Environment variables

export NPM_CONFIG_GLOBALCONFIG="$HOME/.npmrc-global" # 'npm config' location
export DISABLE_OPENCOLLECTIVE=1
export OPEN_SOURCE_SUPPORTER=1
export NEXT_TELEMETRY_DISABLED=1

# Ubuntu (where /etc/hostname exists)

if [[ -f "/etc/hostname" ]]; then
  alias ss='sudo systemctl'
  alias sss='sudo supervisorctl'
  alias uu='sudo apt update && sudo apt upgrade && cleanup'
  alias cleanup='sudo apt autoremove && rm -rf ~/.electron ~/.npm ~/.node-gyp'
fi

# macOS (where no /etc/hostname exists)

if [[ ! -f "/etc/hostname" ]]; then
  export HOMEBREW_NO_ANALYTICS=1

  # Use brew-installed Python 3 user directory (for pipenv)
  # Found with "python3 -m site --user-base" plus appending "bin"
  if [[ -d "/Users/feross/Library/Python/3.7/bin" ]]; then
    PATH="/Users/feross/Library/Python/3.7/bin:$PATH"
  fi

  # Use brew-installed Ruby
  if [[ -d "/usr/local/opt/ruby/bin" ]]; then
    PATH="/usr/local/opt/ruby/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/ruby/lib"
    CPPFLAGS="-I/usr/local/opt/ruby/include"
    PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"
  fi

  if [[ ! -f "/usr/local/bin/code" ]]; then
    echo "warning: 'code' is missing (install from https://code.visualstudio.com)"
  fi

  if [[ ! -f "/usr/local/bin/brew" ]]; then
    echo "warning: 'brew' is missing (install from https://brew.sh)"
  fi

  if [[ ! -f "/usr/local/bin/github" ]]; then
    echo "warning: 'github' is missing (install from https://desktop.github.com)"
  fi

  if [[ ! -f "/usr/local/bin/travis" ]]; then
    echo "warning: 'travis' is missing (run 'gem install travis')"
  fi

  # Used by brave-browser
  if [[ ! -f "/usr/local/bin/ccache" ]]; then
    echo "warning: 'ccache' is missing (run 'brew install ccache')"
  fi

  # Install symlinks for compilers that will automatically use ccache
  # Used by brave-browser
  if [[ -d "/usr/local/opt/ccache/libexec" ]]; then
    PATH="/usr/local/opt/ccache/libexec:$PATH"
  fi

  # Global npm packages

  if [[ ! -f "/usr/local/bin/browserify" ]]; then
    echo "warning: 'browserify' is missing (run 'npm install -g browserify')"
  fi

  if [[ ! -f "/usr/local/bin/dependency-check" ]]; then
    echo "warning: 'dependency-check' is missing (run 'npm install -g dependency-check')"
  fi

  if [[ ! -f "/usr/local/bin/figlet" ]]; then
    echo "warning: 'figlet' is missing (run 'npm install -g figlet-cli')"
  fi

  if [[ ! -f "/usr/local/bin/fixpack" ]]; then
    echo "warning: 'fixpack' is missing (run 'npm install -g fixpack')"
  fi

  if [[ ! -f "/usr/local/bin/json" ]]; then
    echo "warning: 'json' is missing (run 'npm install -g json')"
  fi

  if [[ ! -f "/usr/local/bin/minify" ]]; then
    echo "warning: 'minify' is missing (run 'npm install -g babel-minify')"
  fi

  if [[ ! -f "/usr/local/bin/nodemon" ]]; then
    echo "warning: 'nodemon' is missing (run 'npm install -g nodemon')"
  fi

  if [[ ! -f "/usr/local/bin/ncu" ]]; then
    echo "warning: 'ncu' is missing (run 'npm install -g npm-check-updates')"
  fi

  if [[ ! -f "/usr/local/bin/standard" ]]; then
    echo "warning: 'standard' is missing (run 'npm install -g standard')"
  fi

  if [[ ! -f "/usr/local/bin/ytdl" ]]; then
    echo "warning: 'ytdl' is missing (run 'npm install -g ytdl')"
  fi

  # init travis
  if [[ -f "$HOME/.travis/travis.sh" ]]; then
    source /Users/feross/.travis/travis.sh
  else
    echo "warning: '.travis/travis.sh' is missing (run 'travis')"
  fi

  # init z
#  if [[ -f "/usr/local/etc/profile.d/z.sh" ]]; then
#    source /usr/local/etc/profile.d/z.sh
#  else
#    echo "warning: 'z' is missing (run 'brew install z')"
#  fi

  alias c='code'
  alias gh='github .'
  alias s='code'
  alias uu='sudo echo Starting... && cd ~ && brew update && brew bundle --no-lock --file=~/.Brewfile && brew upgrade && sudo gem update --system && sudo gem update && cleanup'
  alias cleanup='cd ~ && brew bundle cleanup --force --file=~/.Brewfile && brew cleanup && rm -rf ~/.babel.json ~/.electron ~/.npm ~/.node-gyp "~/.standard-*-cache" "~/.standardx-*-cache" ~/Library/Caches/electron ~/Library/Caches/Yarn ~/Library/Caches/BraveSoftware && ccache --clear && popd'
fi

# Prevent stupid zsh suggestions. Only correct commands, not arguments.
unsetopt CORRECTALL
setopt CORRECT

# Overwrite existing files with redirection (> and >>).
setopt CLOBBER
